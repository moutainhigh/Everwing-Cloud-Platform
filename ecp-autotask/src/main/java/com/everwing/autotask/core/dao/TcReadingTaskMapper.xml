<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.everwing.autotask.core.dao.TcReadingTaskMapper">
    <resultMap id="BaseResultMap" type="TcReadingTask">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="taskCode" column="task_code" jdbcType="VARCHAR"/>
        <result property="scheduleCode" column="schedule_code" jdbcType="VARCHAR"/>
        <result property="scheduleId" column="schedule_id" jdbcType="VARCHAR"/>
        <result property="taskContent" column="task_content" jdbcType="VARCHAR"/>
        <result property="scheduleContent" column="schedule_content" jdbcType="VARCHAR"/>
        <result property="readingPosition" column="reading_position" jdbcType="VARCHAR"/>
        <result property="readingPersonId" column="reading_person_id" jdbcType="VARCHAR"/>
        <result property="readingPersonName" column="reading_person_name" jdbcType="VARCHAR"/>
        <result property="totalMeterCount" column="total_meter_count" jdbcType="INTEGER"/>
        <result property="completeMeterCount" column="complete_meter_count" jdbcType="INTEGER"/>
        <result property="remainMeterCount" column="remain_meter_count" jdbcType="INTEGER"/>
        <result property="meterType" column="meter_type" jdbcType="TINYINT"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="auditStatus" column="audit_status" jdbcType="TINYINT"/>
        <result property="auditStartTime" column="audit_start_time" jdbcType="TIMESTAMP"/>
        <result property="auditEndTime" column="audit_end_time" jdbcType="TIMESTAMP"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="createId" column="create_id" jdbcType="VARCHAR"/>
        <result property="modifyId" column="modify_id" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
        <result property="lastTaskId" column="last_task_id" jdbcType="VARCHAR"/>
        <result property="auditedMeterCount" column="audited_meter_count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="hasScheduleInfoResultMap" extends="BaseResultMap" type="java.util.Map">
        <result property="scheduleName" column="schedule_name" jdbcType="VARCHAR"/>
        <result property="isCircle" column="is_circle" jdbcType="TINYINT"/>
        <result property="execFreq" column="exec_freq" jdbcType="TINYINT"/>
        <result property="auditDays" column="audit_days" jdbcType="INTEGER"/>
        <result property="auditedMeterCount" column="audited_meter_count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="hasMeterDatasMap" extends="BaseResultMap" type="TcReadingTask" >
        <collection property="meterDatas" column="id" select="com.everwing.autotask.core.dao.TcMeterDataMapper.findAllDatasByTaskId"></collection>
    </resultMap>

    <resultMap type="TcReadingTask" id="hasRelationResultMap" extends="BaseResultMap">
        <collection property="relations" column="id" select="getTaskRelationListByTaskId"></collection>
    </resultMap>

    <resultMap type="TcReadingTask" id="hasDatasAndRelationsMap" extends="BaseResultMap">
        <collection property="meterDatas" column="id" select="com.everwing.coreservice.autotask.core.dao.TcMeterDataMapper.findAllDatasByTaskId"></collection>
        <collection property="relations" column="id" select="getTaskRelationListByTaskId"></collection>
    </resultMap>

    <select id="getTaskRelationListByTaskId" parameterType="String" resultType="Map">
        select id,building_code buildingCode,relation_id relationId,type from tc_meterfeeobj_relation
        where relation_id = #{0}
        and type = 3
    </select>

    <insert id="insert" parameterType="TcReadingTask">
        insert into tc_reading_task(
        id,
        task_code,
        schedule_code,
        schedule_id,
        task_content,
        schedule_content,
        reading_position,
        reading_person_id,
        total_meter_count,
        complete_meter_count,
        remain_meter_count,
        meter_type,
        audit_status,
        audit_start_time,
        audit_end_time,
        status,
        start_time,
        end_time,
        create_id,
        modify_id,
        create_time,
        modify_time,
        last_task_id
        )
        values
        (
        #{id},
        (SELECT * FROM (
        SELECT CONCAT("TASK",LPAD(IFNULL(SUBSTRING(MAX(task_code),5),"00001")+1,5,"0"))
        FROM tc_reading_task
        ORDER BY task_code DESC
        LIMIT 0,1
        ) t
        ),
        #{scheduleCode},
        #{scheduleId},
        #{taskContent},
        #{scheduleContent},
        #{readingPosition},
        #{readingPersonId},
        #{totalMeterCount},
        #{completeMeterCount},
        #{remainMeterCount},
        #{meterType},
        #{auditStatus},
        #{auditStartTime},
        #{auditEndTime},
        #{status},
        #{startTime},
        #{endTime},
        #{createId},
        #{modifyId},
        #{createTime},
        #{modifyTime},
        #{lastTaskId}
        )
    </insert>

    <select id="getNextTaskByCurrentId" parameterType="String" resultMap="BaseResultMap">
        select *
        from tc_reading_task
        where last_task_id = #{0}
        and id not in
        (
        SELECT relation_id
        FROM tc_order_complaint WHERE relation_id IS NOT NULL
        GROUP BY relation_id
        )
    </select>

    <select id="findCanCopyTasks" resultMap="hasDatasAndRelationsMap">
        SELECT t1.*
        FROM tc_reading_task t1,
        tc_reading_schedule t2
        WHERE t1.schedule_id = t2.id
        AND t2.status = 1
        AND t1.audit_status = 1
        AND t1.status = 2
        and t2.is_circle = 0
        AND t1.id NOT IN(
        SELECT
        last_task_id
        FROM tc_reading_task
        WHERE last_task_id IS NOT NULL
        AND id NOT IN (SELECT relation_id
        FROM tc_order_complaint
        GROUP BY relation_id
        )
        GROUP BY last_task_id)
        <![CDATA[
			    and DATE(t2.reading_end_time) > date_add(sysdate(),INTERVAL t2.exec_freq MONTH)
	   			and sysdate() between DATE(t1.audit_end_time)
	   						  and date_add(DATE(t1.audit_end_time),INTERVAL t2.exec_freq MONTH)
	   		]]>
    </select>
    <select id="findCanCompleteTasks" resultMap="hasMeterDatasMap">
        select t1.*
        from tc_reading_task t1,
        tc_reading_schedule t2
        where t1.schedule_id = t2.id
        and t2.status = 1
        and t1.audit_status = 0
        and t1.status = 1
        <![CDATA[
			   and DATE(t1.end_time) <= sysdate()
		   ]]>
    </select>

    <select id="getTasksByScheduleId" resultMap="hasRelationResultMap" parameterType="java.lang.String">
        SELECT t1.id,
        t1.task_code,
        t1.schedule_code,
        t1.schedule_id,
        t1.task_content,
        GROUP_CONCAT(t.building_code SEPARATOR ',')  reading_position,
        t1.reading_person_id,
        t1.total_meter_count,
        t1.complete_meter_count,
        t1.remain_meter_count,
        t1.meter_type,
        t1.audit_status,
        t1.audit_start_time,
        t1.audit_end_time,
        t1.status,
        t1.start_time,
        t1.end_time,
        t1.create_time,
        t1.modify_id,
        t1.modify_time,
        t1.last_task_id,
        t2.staff_name AS create_id
        FROM tc_reading_task t1
        inner join t_sys_user t2 on t2.user_id = t1.reading_person_id
        left join tc_meterfeeobj_relation t on t.relation_id = t1.id
        WHERE t1.schedule_id = #{scheduleId}
        AND t.TYPE = 3
        group by t1.task_code
        order by t1.create_time desc, t1.task_code desc
    </select>

    <update id="update" parameterType="TcReadingTask">
        update tc_reading_task
        <set>
            <if test="null != taskContent">
                task_content = #{taskContent},
            </if>
            <if test="null != scheduleContent">
                schedule_content = #{scheduleContent},
            </if>
            <if test="null != readingPosition">
                reading_position = #{readingPosition},
            </if>
            <if test="null != readingPersonId">
                reading_person_id = #{readingPersonId},
            </if>
            <if test="null != totalMeterCount and 0 != totalMeterCount">
                total_meter_count = #{totalMeterCount},
            </if>
            <if test="null != completeMeterCount and 0 != completeMeterCount">
                complete_meter_count = #{completeMeterCount},
            </if>
            <if test="null != remainMeterCount">
                remain_meter_count = #{remainMeterCount},
            </if>
            <if test="null != meterType">
                meter_type = #{meterType},
            </if>
            <if test="null != auditStartTime">
                audit_start_time = #{auditStartTime},
            </if>
            <if test="null != auditEndTime">
                audit_end_time = #{auditEndTime},
            </if>
            <if test="null != status">
                status = #{status},
            </if>
            <if test="null != startTime">
                start_Time = #{startTime},
            </if>
            <if test="null != endTime">
                end_time = #{endTime},
            </if>
            <if test="null != modifyId">
                modify_id = #{modifyId},
            </if>
            <if test="null != modifyTime">
                modify_time = #{modifyTime},
            </if>
            <if test="null != lastTaskId">
                last_task_id = #{lastTaskId},
            </if>
            <if test="null != auditStatus">
                audit_status = #{auditStatus},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="startInitTasks">
        UPDATE tc_reading_task
        SET `status` = 1
        WHERE `status` = 0
        AND schedule_id IN (SELECT id FROM tc_reading_schedule WHERE `status` = 1)
        AND curdate() between DATE_FORMAT(start_time,'%y-%m-%d') and date_format(end_time,'%y-%m-%d')
    </update>
</mapper>