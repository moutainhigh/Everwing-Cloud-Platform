<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.everwing.autotask.core.dao.AcLateFeeStreamMapper">
  <resultMap id="BaseResultMap" type="com.everwing.coreservice.common.wy.fee.entity.AcLateFeeStream">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="delay_account_id" jdbcType="VARCHAR" property="delayAccountId" />
    <result column="house_code_new" jdbcType="VARCHAR" property="houseCodeNew" />
    <result column="before_amount" jdbcType="DECIMAL" property="beforeAmount" />
    <result column="after_amount" jdbcType="DECIMAL" property="afterAmount" />
    <result column="change_amount" jdbcType="DECIMAL" property="changeAmount" />
    <result column="business_type" jdbcType="SMALLINT" property="businessType" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="opera_id" jdbcType="VARCHAR" property="operaId" />
    <result column="principal_account" jdbcType="DECIMAL" property="principalAccount" />
    <result column="rate" jdbcType="DECIMAL" property="rate" />
    <result column="is_singleinterest" jdbcType="INTEGER" property="isSingleinterest" />
    <result column="overdue_days" jdbcType="INTEGER" property="overdueDays" />
  </resultMap>
  <sql id="Base_Column_List">
    id, delay_account_id, house_code_new, before_amount, after_amount, change_amount, 
    business_type, project_id, project_name, create_time, create_id, description, opera_id, 
    principal_account, rate, is_singleinterest, overdue_days
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ac_late_fee_stream
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
  
  <!-- 根据违约金账户id，查询出最新的一跳违约金流水信息 -->
  <select id="selectLastOneByDelayAccountId"  resultMap ="BaseResultMap">
  		select * from t_ac_late_fee_stream where delay_account_id = (
			select id from t_ac_delay_account where house_code_new = #{houseCodeNew} and account_type = #{accountType}
		) 
  		order by create_time DESC LIMIT 1
  </select>
  
  <select id="checkBefore" resultType="java.lang.Integer">
    SELECT
      count(1)
    FROM
      t_ac_late_fee_stream sd
    WHERE
      NOT EXISTS (
              SELECT
                1
              FROM
                t_ac_late_fee_stream
              WHERE
                house_code_new = sd.house_code_new
                AND create_time > sd.create_time
      )
      AND house_code_new = #{houseCodeNew}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_ac_late_fee_stream
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.everwing.coreservice.common.wy.fee.entity.AcLateFeeStream">
    insert into t_ac_late_fee_stream (id, delay_account_id, house_code_new, 
      before_amount, after_amount, change_amount, 
      business_type, project_id, project_name, 
      create_time, create_id, description, 
      opera_id, principal_account, rate, 
      is_singleinterest, overdue_days)
    values (#{id,jdbcType=VARCHAR}, #{delayAccountId,jdbcType=VARCHAR}, #{houseCodeNew,jdbcType=VARCHAR}, 
      #{beforeAmount,jdbcType=DECIMAL}, #{afterAmount,jdbcType=DECIMAL}, #{changeAmount,jdbcType=DECIMAL}, 
      #{businessType,jdbcType=SMALLINT}, #{projectId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{operaId,jdbcType=VARCHAR}, #{principalAccount,jdbcType=DECIMAL}, #{rate,jdbcType=DECIMAL}, 
      #{isSingleinterest,jdbcType=INTEGER}, #{overdueDays,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.everwing.coreservice.common.wy.fee.entity.AcLateFeeStream">
    insert into t_ac_late_fee_stream
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="delayAccountId != null">
        delay_account_id,
      </if>
      <if test="houseCodeNew != null">
        house_code_new,
      </if>
      <if test="beforeAmount != null">
        before_amount,
      </if>
      <if test="afterAmount != null">
        after_amount,
      </if>
      <if test="changeAmount != null">
        change_amount,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="operaId != null">
        opera_id,
      </if>
      <if test="principalAccount != null">
        principal_account,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="isSingleinterest != null">
        is_singleinterest,
      </if>
      <if test="overdueDays != null">
        overdue_days,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="delayAccountId != null">
        #{delayAccountId,jdbcType=VARCHAR},
      </if>
      <if test="houseCodeNew != null">
        #{houseCodeNew,jdbcType=VARCHAR},
      </if>
      <if test="beforeAmount != null">
        #{beforeAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="changeAmount != null">
        #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=SMALLINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="operaId != null">
        #{operaId,jdbcType=VARCHAR},
      </if>
      <if test="principalAccount != null">
        #{principalAccount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="isSingleinterest != null">
        #{isSingleinterest,jdbcType=INTEGER},
      </if>
      <if test="overdueDays != null">
        #{overdueDays,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  
  
  <insert id="insertBySelect">
   		INSERT INTO t_ac_late_fee_stream (
			id,
			delay_account_id,
			house_code_new,
			before_amount,
			after_amount,
			change_amount,
			business_type,
			project_id,
			project_name,
			create_time,
			create_id,
			description,
			opera_id,
			principal_account,
			rate,
			is_singleinterest,
			overdue_days
		) SELECT
			#{id,jdbcType=VARCHAR}, #{delayAccountId,jdbcType=VARCHAR}, #{houseCodeNew,jdbcType=VARCHAR},
			tb.after_amount,
			tb.after_amount + #{changeAmount}, #{changeAmount,jdbcType=DECIMAL},
			#{businessType,jdbcType=SMALLINT}, #{projectId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
			#{operaId,jdbcType=VARCHAR}, #{principalAccount,jdbcType=DECIMAL}, #{rate,jdbcType=DECIMAL},
			#{isSingleinterest,jdbcType=INTEGER}, #{overdueDays,jdbcType=INTEGER}
		FROM
			(
				SELECT
					ifnull(after_amount, 0) after_amount
				FROM
					t_ac_late_fee_stream sd
				WHERE
					NOT EXISTS (
						SELECT
							1
						FROM
							t_ac_late_fee_stream
						WHERE
							house_code_new = sd.house_code_new
						AND create_time > sd.create_time
					)
				AND house_code_new = #{houseCodeNew}) tb
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.everwing.coreservice.common.wy.fee.entity.AcLateFeeStream">
    update t_ac_late_fee_stream
    <set>
      <if test="delayAccountId != null">
        delay_account_id = #{delayAccountId,jdbcType=VARCHAR},
      </if>
      <if test="houseCodeNew != null">
        house_code_new = #{houseCodeNew,jdbcType=VARCHAR},
      </if>
      <if test="beforeAmount != null">
        before_amount = #{beforeAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        after_amount = #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="changeAmount != null">
        change_amount = #{changeAmount,jdbcType=DECIMAL},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=SMALLINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="operaId != null">
        opera_id = #{operaId,jdbcType=VARCHAR},
      </if>
      <if test="principalAccount != null">
        principal_account = #{principalAccount,jdbcType=DECIMAL},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="isSingleinterest != null">
        is_singleinterest = #{isSingleinterest,jdbcType=INTEGER},
      </if>
      <if test="overdueDays != null">
        overdue_days = #{overdueDays,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.everwing.coreservice.common.wy.fee.entity.AcLateFeeStream">
    update t_ac_late_fee_stream
    set delay_account_id = #{delayAccountId,jdbcType=VARCHAR},
      house_code_new = #{houseCodeNew,jdbcType=VARCHAR},
      before_amount = #{beforeAmount,jdbcType=DECIMAL},
      after_amount = #{afterAmount,jdbcType=DECIMAL},
      change_amount = #{changeAmount,jdbcType=DECIMAL},
      business_type = #{businessType,jdbcType=SMALLINT},
      project_id = #{projectId,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      opera_id = #{operaId,jdbcType=VARCHAR},
      principal_account = #{principalAccount,jdbcType=DECIMAL},
      rate = #{rate,jdbcType=DECIMAL},
      is_singleinterest = #{isSingleinterest,jdbcType=INTEGER},
      overdue_days = #{overdueDays,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 根据账户类型和房屋编码查询最新的一条违约金流水信息,用于修改违约金本金信息 -->
  <select id="getLastLateFeeStream" resultMap= "BaseResultMap">
  		select * from t_ac_late_fee_stream where delay_account_id = (
			select id from t_ac_delay_account where house_code_new = #{houseCodeNew} and account_type = #{accountType}
		) order by create_time DESC LIMIT 1
  </select>
  
  
</mapper>