<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.everwing.coreservice.dynamicreports.dao.mapper.system.rights.TRightsRoleMapper">
    <resultMap type="TRightsRole" id="TRightsRoleResultMap">
        <result property="roleId" column="role_id"/>
        <result property="code" column="code"/>
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="status" column="status"/>
        <result property="createrId" column="creater_id"/>
        <result property="createrName" column="creater_name"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyId" column="modify_id"/>
        <result property="modifyName" column="modify_name"/>
        <result property="modifyTime" column="modify_time"/>
    </resultMap>
    <resultMap id="TRightsRoleVOResultMap" type="TRightsRoleVO" extends="TRightsRoleResultMap">
        <result column="status_name" property="statusName"/>
    </resultMap>

    <select id="listPage" parameterType="TRightsRoleQO" resultMap="TRightsRoleVOResultMap">
        SELECT
            t.role_id,
            t.code,
            t.role_name,
            t.role_desc,
            t.`status`,
            (SELECT li.`name` FROM t_sys_lookup l,t_sys_lookup_item li WHERE l.`code` = li.parent_code and l.`code` = 'enableDisable' AND li.`code` = t.status) as status_name,
            t.creater_id,
            t.creater_name,
            t.create_time,
            t.modify_id,
            t.modify_name,
            t.modify_time
        FROM t_rights_role t WHERE 1=1
        <if test="roleIdList != null">
            AND t.role_id IN
            <foreach collection="roleIdList" item="item" index="index" open="(" close=")" separator=",">
                '${item}'
            </foreach>
        </if>
        <if test="code != null and code !=  ''">
            AND t.code = #{code}
        </if>
        ORDER BY t.role_name
    </select>

    <select id="findByCondition" parameterType="TRightsRoleQO" resultMap="TRightsRoleVOResultMap">
        select
            t.role_id,
            t.code,
            t.role_name,
            t.role_desc,
            t.`status`,
            (SELECT li.`name` FROM t_sys_lookup l,t_sys_lookup_item li WHERE l.`code` = li.parent_code and l.`code` = 'enableDisable' AND li.`code` = t.status) as status_name,
            t.creater_id,
            t.creater_name,
            t.create_time,
            t.modify_id,
            t.modify_name,
            t.modify_time
        from t_rights_role t where 1=1
        <if test="null != roleName">
            and role_name = #{roleName}
        </if>
        <if test="null != roleId">
            and role_id = #{roleId}
        </if>
        <if test="null != code">
            and code = #{code}
        </if>
        ORDER BY t.role_name
    </select>

    <insert id="insert" parameterType="TRightsRole" >
        insert into t_rights_role
        (
            role_id,
            code,
            role_name,
            role_desc,
            status,
            creater_id,
            creater_name,
            create_time
        )
        values
        (
            UUID(),
            #{code},
            #{roleName},
            #{roleDesc},
            #{status},
            #{createrId},
            #{createrName},
            sysdate()
        )
    </insert>

    <insert id="batchInsert" parameterType="TRightsRole" >
        insert into t_rights_role
        (
            role_id,
            code,
            role_name,
            role_desc,
            status,
            creater_id,
            creater_name,
            create_time
        )
        values
        <foreach collection="list" index="index" item="item" separator=",">
        (
            UUID(),
            #{item.code},
            #{item.roleName},
            #{item.roleDesc},
            #{item.status},
            #{item.createrId},
            #{item.createrName},
            sysdate()
        )
        </foreach>
    </insert>

    <update id="modify" parameterType="TRightsRole">
        update t_rights_role
        <set>
            role_name = #{roleName},
            role_desc = #{roleDesc},
            modify_id = #{modifyId},
            status = #{status},
            modify_time = sysdate()
        </set>
        where role_id = #{roleId}
    </update>

    <delete id="delete" parameterType="String">
        DELETE FROM t_rights_role WHERE role_id = #{0}
    </delete>

    <delete id="batchDelete" parameterType="List">
        <![CDATA[
	       delete from t_rights_role where role_id in
	    ]]>
        <foreach collection="list" item = "roleId" open="(" separator="," close=")">
            #{roleId }
        </foreach>
    </delete>
</mapper>