<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.everwing.coreservice.platform.dao.mapper.generated.MkjLogMapper">
  <resultMap id="BaseResultMap" type="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="tobuilding_code" jdbcType="VARCHAR" property="tobuildingCode" />
    <result column="form_code" jdbcType="VARCHAR" property="formCode" />
    <result column="gating_code" jdbcType="VARCHAR" property="gatingCode" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="gating_account" jdbcType="VARCHAR" property="gatingAccount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="frombuilding_code" jdbcType="VARCHAR" property="frombuildingCode" />
  </resultMap>

    <resultMap id="gatingLogStatisticsDTOResult" type="com.everwing.coreservice.common.wy.dto.GatingLogStatisticsDTO">
        <result column="logDate" property="logDate"  />
        <result column="invitationCount" property="invitationCount"  />
        <result column="passwordCount" property="passwordCount"  />
        <result column="scanCount" property="scanCount"  />
        <result column="callCount" property="callCount"  />
        <result column="onekeyCount" property="onekeyCount"  />
        <result column="totalCount" property="totalCount"  />
    </resultMap>

    <resultMap id="LogQueryDTOResult" type="com.everwing.coreservice.common.dto.LogQueryDTO">
        <result column="openDoorLogDate" property="openDoorLogDate"  />
        <result column="openDoorType" property="openDoorType"  />
    </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, company_id, project_id, tobuilding_code, form_code, gating_code, type, gating_account, 
    create_time, frombuilding_code
  </sql>
  <select id="selectByExample" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from mkj_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
      <if test="limitStart >= 0">
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from mkj_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mkj_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLogExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mkj_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mkj_log (id, company_id, project_id, 
      tobuilding_code, form_code, gating_code, 
      type, gating_account, create_time, 
      frombuilding_code)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, 
      #{tobuildingCode,jdbcType=VARCHAR}, #{formCode,jdbcType=VARCHAR}, #{gatingCode,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{gatingAccount,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{frombuildingCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mkj_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="tobuildingCode != null">
        tobuilding_code,
      </if>
      <if test="formCode != null">
        form_code,
      </if>
      <if test="gatingCode != null">
        gating_code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="gatingAccount != null">
        gating_account,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="frombuildingCode != null">
        frombuilding_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="tobuildingCode != null">
        #{tobuildingCode,jdbcType=VARCHAR},
      </if>
      <if test="formCode != null">
        #{formCode,jdbcType=VARCHAR},
      </if>
      <if test="gatingCode != null">
        #{gatingCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="gatingAccount != null">
        #{gatingAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="frombuildingCode != null">
        #{frombuildingCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from mkj_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mkj_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.tobuildingCode != null">
        tobuilding_code = #{record.tobuildingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.formCode != null">
        form_code = #{record.formCode,jdbcType=VARCHAR},
      </if>
      <if test="record.gatingCode != null">
        gating_code = #{record.gatingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.gatingAccount != null">
        gating_account = #{record.gatingAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.frombuildingCode != null">
        frombuilding_code = #{record.frombuildingCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mkj_log
    set id = #{record.id,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      tobuilding_code = #{record.tobuildingCode,jdbcType=VARCHAR},
      form_code = #{record.formCode,jdbcType=VARCHAR},
      gating_code = #{record.gatingCode,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      gating_account = #{record.gatingAccount,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      frombuilding_code = #{record.frombuildingCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mkj_log
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="tobuildingCode != null">
        tobuilding_code = #{tobuildingCode,jdbcType=VARCHAR},
      </if>
      <if test="formCode != null">
        form_code = #{formCode,jdbcType=VARCHAR},
      </if>
      <if test="gatingCode != null">
        gating_code = #{gatingCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="gatingAccount != null">
        gating_account = #{gatingAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="frombuildingCode != null">
        frombuilding_code = #{frombuildingCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mkj_log
    set company_id = #{companyId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      tobuilding_code = #{tobuildingCode,jdbcType=VARCHAR},
      form_code = #{formCode,jdbcType=VARCHAR},
      gating_code = #{gatingCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      gating_account = #{gatingAccount,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      frombuilding_code = #{frombuildingCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="queryLogStatistics" resultMap="gatingLogStatisticsDTOResult">
        select
        date(create_time) logDate,
        count(CASE WHEN type = -1 THEN 1 ELSE NULL END ) as invitationCount,
        count(CASE WHEN type = 0 THEN 1 ELSE NULL END )  as passwordCount,
        count(CASE WHEN type = 1 THEN 1 ELSE NULL END )  as scanCount,
        count(CASE WHEN type = 2 THEN 1 ELSE NULL END )  as callCount,
        count(CASE WHEN type = 3 THEN 1 ELSE NULL END )  as onekeyCount,
        count(CASE WHEN type <![CDATA[ < ]]> 4 THEN 1 ELSE NULL END )   as totalCount
        from mkj_log where gating_account = #{mkAccountName} and company_id = #{companyId}
        GROUP BY date(create_time) ORDER BY logDate DESC
        limit #{limit},#{pageSize}
    </select>
    
    <select id="queryLogsByObj" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog" resultMap="BaseResultMap">
    	select 
    		t.id,
    		t.company_id,
    		t.type,
    		t.gating_account,
    		t1.employ_project as project_id,
    		t.create_time
    	  from mkj_log t
    	  left join gating t1 
    	  	on t.project_id = t1.project_id 
    	   and t.company_id = t1.company_id
    	   AND t.gating_account = t1.account_name
    	 where 1 = 1
    	<if test="null != companyId">
    		and t.company_id = #{companyId}
    	</if>
    	<if test="null != projectId">
    		and t.project_id = #{projectId}
    	</if>
    	<if test="null != gatingAccount">
    		and t.gating_account like CONCAT('%',#{gatingAccount},'%')
    	</if>
    	<if test="null != startTime">
    		<![CDATA[
    			and t.create_time >= #{startTime}
    		]]>
    	</if>
    	<if test="null != endTime">
    		<![CDATA[
    			and t.create_time <= #{endTime}
    		]]>
    	</if>
		order by t.create_time desc
		<if test="null != limit and null != pageSize">
			limit #{limit}, #{pageSize}
		</if>
    </select>
	
	<select id="countLogsByObj" resultType="Integer" parameterType="com.everwing.coreservice.common.platform.entity.generated.MkjLog">
		select count(0) from mkj_log
		where 1 = 1
		<if test="null != companyId">
    		and company_id = #{companyId}
    	</if>
    	<if test="null != projectId">
    		and project_id = #{projectId}
    	</if>
    	<if test="null != gatingAccount">
    		and gating_account like CONCAT('%',#{gatingAccount},'%')
    	</if>
    	<if test="null != startTime">
    		<![CDATA[
    			and create_time >= #{startTime}
    		]]>
    	</if>
    	<if test="null != endTime">
    		<![CDATA[
    			and create_time <= #{endTime}
    		]]>
    	</if>
	</select>

    <select id="queryMkLogData" resultMap="LogQueryDTOResult">
        select create_time as openDoorLogDate,type as openDoorType
        from mkj_log where company_id = #{companyId} and  gating_account = #{gatingAccountName}
        and DATE(create_time) = #{logDate}
    </select>
</mapper>