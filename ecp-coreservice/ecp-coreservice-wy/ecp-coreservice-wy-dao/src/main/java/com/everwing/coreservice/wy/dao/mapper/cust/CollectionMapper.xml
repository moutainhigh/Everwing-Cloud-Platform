<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.everwing.coreservice.wy.dao.mapper.cust.CollectionMapper">
  <resultMap id="BaseResultMap" type="com.everwing.coreservice.common.wy.entity.cust.TBcCollection">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cust_id" jdbcType="VARCHAR" property="custId" />
    <result column="cust_name" jdbcType="VARCHAR" property="custName" />
    <result column="create_bank" jdbcType="INTEGER" property="createBank" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="relate_building_code" jdbcType="VARCHAR" property="relateBuildingCode" />
    <result column="charging_items" jdbcType="VARCHAR" property="chargingItems" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
    <result column="relate_building_full_name" jdbcType="VARCHAR" property="relateBuildingFullName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="card_type" jdbcType="INTEGER" property="cardType" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cust_id, cust_name, create_bank, card_num, province, city, start_time, contract_no,
    relate_building_code, charging_items, attachment, relate_building_full_name, status,
    project_id, card_type, card_no
  </sql>
  <select id="selectByExample" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_bc_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
      <if test="limitStart >= 0">
        limit ${limitStart} , ${limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_bc_collection
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_bc_collection
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollectionExample">
    delete from t_bc_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollection">
    insert into t_bc_collection (id, cust_id, cust_name,
    create_bank, card_num, province,
    city, start_time, contract_no,
    relate_building_code, charging_items, attachment,
    relate_building_full_name, status, project_id,
    card_type, card_no, create_by)
    values (#{id,jdbcType=VARCHAR}, #{custId,jdbcType=VARCHAR}, #{custName,jdbcType=VARCHAR},
    #{createBank,jdbcType=INTEGER}, #{cardNum,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
    #{city,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{contractNo,jdbcType=VARCHAR},
    #{relateBuildingCode,jdbcType=VARCHAR}, #{chargingItems,jdbcType=VARCHAR}, #{attachment,jdbcType=VARCHAR},
    #{relateBuildingFullName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{projectId,jdbcType=VARCHAR},
    #{cardType,jdbcType=INTEGER}, #{cardNo,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollection">
    insert into t_bc_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="custName != null">
        cust_name,
      </if>
      <if test="createBank != null">
        create_bank,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="contractNo != null">
        contract_no,
      </if>
      <if test="relateBuildingCode != null">
        relate_building_code,
      </if>
      <if test="chargingItems != null">
        charging_items,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="relateBuildingFullName != null">
        relate_building_full_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="cardType != null">
        card_type,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="custName != null">
        #{custName,jdbcType=VARCHAR},
      </if>
      <if test="createBank != null">
        #{createBank,jdbcType=INTEGER},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="relateBuildingCode != null">
        #{relateBuildingCode,jdbcType=VARCHAR},
      </if>
      <if test="chargingItems != null">
        #{chargingItems,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="relateBuildingFullName != null">
        #{relateBuildingFullName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null">
        #{cardType,jdbcType=INTEGER},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollectionExample" resultType="java.lang.Long">
    select count(*) from t_bc_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollection">
    update t_bc_collection
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=VARCHAR},
      </if>
      <if test="custName != null">
        cust_name = #{custName,jdbcType=VARCHAR},
      </if>
      <if test="createBank != null">
        create_bank = #{createBank,jdbcType=INTEGER},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contractNo != null">
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="relateBuildingCode != null">
        relate_building_code = #{relateBuildingCode,jdbcType=VARCHAR},
      </if>
      <if test="chargingItems != null">
        charging_items = #{chargingItems,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="relateBuildingFullName != null">
        relate_building_full_name = #{relateBuildingFullName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null">
        card_type = #{cardType,jdbcType=INTEGER},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.everwing.coreservice.common.wy.entity.cust.TBcCollection">
    update t_bc_collection
    set cust_id = #{custId,jdbcType=VARCHAR},
      cust_name = #{custName,jdbcType=VARCHAR},
      create_bank = #{createBank,jdbcType=INTEGER},
      card_num = #{cardNum,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      contract_no = #{contractNo,jdbcType=VARCHAR},
      relate_building_code = #{relateBuildingCode,jdbcType=VARCHAR},
      charging_items = #{chargingItems,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      relate_building_full_name = #{relateBuildingFullName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=VARCHAR},
      card_type = #{cardType,jdbcType=INTEGER},
      card_no = #{cardNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findBankTypeById" parameterType="String" resultType="java.lang.Integer">
    select wy_type from t_bc_project where project_id=#{projectId}
  </select>

  <select id="findByBuildingCodeAndType" resultMap="BaseResultMap">
  	select *
  	  from t_bc_collection
  	 where relate_building_code = #{buildingCode}
  	   and LOCATE(#{type},charging_items) > 0
  	   and status = 1
  </select>

  <select id="findAllByProjectIdAndType" parameterType="String" resultMap="BaseResultMap">
  		SELECT *
  		  FROM t_bc_collection
  		 WHERE project_id = #{projectId}
  		   and LOCATE(#{type},charging_items) > 0
  		   and status = 1
  </select>

  <delete id="batchDelete">
    DELETE FROM t_bc_collection WHERE id IN
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <update id="batchEffective">
    UPDATE t_bc_collection SET status=1,update_time=now() WHERE id IN
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  <update id="batchUnEffective">
    UPDATE t_bc_collection SET status=0,update_time=now() WHERE id IN
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>
  
  <select id="findByBuildingCode" parameterType="String" resultMap="BaseResultMap">
  	select * from t_bc_collection
  	 where relate_building_code = #{buildingCode}
  	   and status = 1
  	 order by start_time desc
  	 limit 1
  </select>
  
  <select id="findByBillTotalId" resultMap="BaseResultMap">
<!--   		SELECT t1.* -->
<!-- 		  FROM t_bc_collection t1, t_bs_charge_bill_history t2, t_bs_charge_bill_total t3 -->
<!-- 		 WHERE t1.relate_building_code = t2.building_code -->
<!-- 		   AND t1.status = 1 -->
<!-- 		   AND LOCATE(t3.type,t1.charging_items) > 0 -->
<!-- 		   AND t2.charge_total_id = t3.id -->
<!-- 		   AND t3.id = #{0} -->
	SELECT
	    tt1.*
	   FROM
	    (
	     SELECT
	      *
	     FROM
	      t_bc_collection
	     WHERE
	      STATUS = 1
	     AND project_id = #{projectId}
	    ) tt1,
	    (
	     SELECT
	      h.*, cb.type
	     FROM
	      t_bs_charge_bill_history h,
	      t_bs_charge_bill_total cb
	     WHERE
	      h.charge_total_id = cb.id
	     AND h.charge_total_id = #{totalId}
	    ) tt2
	   WHERE
	    tt1.relate_building_code = tt2.building_code
	   AND LOCATE(
	    tt2.type,
	    tt1.charging_items
	   ) > 0
  </select>
  
  <select id="findByIds" resultMap="BaseResultMap">
  		select * from t_bc_collection
  		where id in 
  		<foreach collection="ids" item="id" open="(" separator="," close=")">
  			#{id}
  		</foreach>
  </select>
  
</mapper>