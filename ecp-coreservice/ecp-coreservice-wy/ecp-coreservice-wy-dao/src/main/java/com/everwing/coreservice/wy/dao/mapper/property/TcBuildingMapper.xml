<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" ><mapper namespace="com.everwing.coreservice.wy.dao.mapper.property.TcBuildingMapper">	<resultMap id="BaseResultMap" type="TcBuilding">		<result property="id" column="id"/>		<result property="buildingCode" column="building_code"/>		<result property="pid" column="pid"/>		<result property="buildingName" column="building_name"/>		<result property="buildingFullName" column="building_full_name"/>		<result property="projectId" column="project_id"/>		<result property="buildingType" column="building_type"/>		<result property="isChargeObj" column="is_charge_obj"/>		<result property="password" column="password"/>		<result property="buildingArea" column="building_area"/>		<result property="usableArea" column="usable_area"/>		<result property="shareArea" column="share_area"/>		<result property="finishDate" column="finish_date"/>		<result property="floorArea" column="floor_area"/>		<result property="houseCode" column="house_code"/>		<result property="houseCodeNew" column="house_code_new"/>		<result property="propertyName" column="property_name"/>		<result property="propertyAddr" column="property_addr"/>		<result property="companyId" column="company_id"/>		<result property="joinFlag" column="join_flag"/>		<result property="joinDate" column="join_date"/>		<result property="unitWyPrice" column="unit_wy_price"/>		<result property="unitBtPrice" column="unit_bt_price"/>		<result property="propertyRightType" column="property_right_type"/>		<result property="propertyRightFlag" column="property_right_flag"/>		<result property="buildingCertificate" column="building_certificate"/>		<result property="propertyAttributes" column="property_attributes"/>		<result property="assetAttributes" column="asset_attributes"/>		<result property="marketState" column="market_state"/>		<result property="buildingHeight" column="building_height"/>		<result property="discounts" column="discounts"/>		<result property="parkingSpaceType" column="parking_space_type"/>		<result property="isStandardBuilding" column="is_standard_building"/>		<result property="assetUsage" column="asset_usage"/>		<result property="placeAttribute" column="place_attribute"/>		<result property="billAddress" column="bill_address"/>		<result property="associatedParkingSpaces" column="associated_parking_spaces"/>		<result property="isFixedParkingSpaces" column="is_fixed_parking_spaces"/>		<result property="createrId" column="creater_id"/>		<result property="createrName" column="creater_name"/>		<result property="modifyId" column="modify_id"/>		<result property="modifyName" column="modify_name"/>		<result property="createTime" column="create_time"/>		<result property="modifyTime" column="modify_time"/>	</resultMap>	<resultMap id="ListResultMap" type="TcBuildingList" extends="BaseResultMap">		<result column="project_name" property="projectName"/>		<result column="jzjg_code" property="jzjgCode"/>		<result column="jzjg_name" property="jzjgName"/>		<result column="qi_code" property="qiCode"/>		<result column="qi_name" property="qiName"/>		<result column="qu_code" property="quCode"/>		<result column="qu_name" property="quName"/>		<result column="dongzuo_code" property="dongzuoCode"/>		<result column="dongzuo_name" property="dongzuoName"/>		<result column="danyuanrukou_code" property="danyuanrukouCode"/>		<result column="danyuanrukou_name" property="danyuanrukouName"/>		<result column="ceng_code" property="cengCode"/>		<result column="ceng_name" property="cengName"/>		<result property="buildingTypeName" column="building_type_name"/>		<result property="marketStateName" column="market_state_name"/>	</resultMap>  	<!-- 根据项目编码同步加载树 -->  	<select id="loadBuildingByProjectId" parameterType="String" resultMap="BaseResultMap">  		select * from tc_building t where project_id = #{0} OR pid IS NULL OR pid ='' order by building_name asc  	</select>	<select id="listPageUnrelated" parameterType="TcBuildingSearch" resultMap="ListResultMap">		SELECT		root.*		FROM		tc_building root		LEFT JOIN tc_water_meter b    on  root.house_code = b.position		LEFT JOIN  tc_electricity_meter  c on  root.house_code = c.position		WHERE		 b.id is null		and c.id is null	</select>	<!-- 分页查询资产信息 -->	<select id="listPage" parameterType="TcBuildingSearch" resultMap="ListResultMap">		SELECT			root.building_code AS jzjg_code,			root.building_name AS jzjg_name,			qi.building_code AS qi_code,			qi.building_name AS qi_name,			qu.building_code AS qu_code,			qu.building_name AS qu_name,			dongzuo.building_code AS dongzuo_code,			dongzuo.building_name AS dongzuo_name,			danyuanrukou.building_code AS danyuanrukou_code,			danyuanrukou.building_name AS danyuanrukou_name,			ceng.building_code AS ceng_code,			ceng.building_name AS ceng_name,			leaf.*		FROM		tc_building root			LEFT JOIN tc_building qi ON root.building_code = qi.pid			LEFT JOIN tc_building qu ON qi.building_code = qu.pid			LEFT JOIN tc_building dongzuo ON qu.building_code = dongzuo.pid			LEFT JOIN tc_building danyuanrukou ON dongzuo.building_code = danyuanrukou.pid			LEFT JOIN tc_building ceng ON danyuanrukou.building_code = ceng.pid			LEFT JOIN tc_building leaf ON ceng.building_code = leaf.pid		WHERE			root.building_code = 'jzjg'			AND qi.building_type = 'qi'			AND qu.building_type = 'qu'			AND dongzuo.building_type = 'dongzuo'			AND danyuanrukou.building_type = 'danyuanrukou'			AND ceng.building_type = 'ceng'			AND leaf.building_full_name IS NOT null			<if test="projectId != null and projectId != ''">				AND qi.project_id = #{projectId}			</if>			<if test="houseCode != null and houseCode != ''">				AND leaf.house_code = #{houseCode}			</if>			<if test="houseCodeNew != null and houseCodeNew != ''">				AND leaf.house_code_new = #{houseCodeNew}			</if>			<if test="buildingFullName != null and buildingFullName != ''">				AND leaf.building_full_name LIKE  CONCAT('%',#{buildingFullName},'%')			</if>			<if test="buildingTreeSearchKeyWord != null and buildingTreeSearchKeyWord != ''">				AND (					leaf.building_full_name LIKE  CONCAT('%',#{buildingTreeSearchKeyWord},'%')					OR leaf.house_code LIKE  CONCAT('%',#{buildingTreeSearchKeyWord},'%')					OR leaf.house_code_new LIKE  CONCAT('%',#{buildingTreeSearchKeyWord},'%')				)			</if>			<if test="buildingType != null and buildingType != ''">				<choose>					<when test="buildingType == 'root'">						AND (root.building_type IS NULL OR root.building_type = '')					</when>					<when test="buildingType == 'qi'">						AND qi.building_type = #{buildingType}					</when>					<when test="buildingType == 'qu'">						AND qu.building_type = #{buildingType}					</when>					<when test="buildingType == 'dongzuo'">						AND dongzuo.building_type = #{buildingType}					</when>					<when test="buildingType == 'danyuanrukou'">						AND danyuanrukou.building_type = #{buildingType}					</when>					<when test="buildingType == 'ceng'">						AND ceng.building_type = #{buildingType}					</when>					<otherwise>						AND leaf.building_type = #{buildingType}					</otherwise>				</choose>			</if>			<if test="buildingCode != null and buildingCode != ''">				<choose>					<when test="buildingType == 'root' || buildingType == ''">						AND root.building_code = #{buildingCode}					</when>					<when test="buildingType == 'qi'">						AND qi.building_code = #{buildingCode}					</when>					<when test="buildingType == 'qu'">						AND qu.building_code = #{buildingCode}					</when>					<when test="buildingType == 'dongzuo'">						AND dongzuo.building_code = #{buildingCode}					</when>					<when test="buildingType == 'danyuanrukou'">						AND danyuanrukou.building_code = #{buildingCode}					</when>					<when test="buildingType == 'ceng'">						AND ceng.building_code = #{buildingCode}					</when>					<otherwise>						AND leaf.building_code = #{buildingCode}					</otherwise>				</choose>			</if>			ORDER BY leaf.building_full_name ASC	</select>	<!-- 获取建筑的所有节点 -->	<select id="findAllBuildingNodeByCondition" parameterType="TcBuildingSearch" resultMap="ListResultMap">		SELECT			root.building_code AS jzjg_code,			root.building_name AS jzjg_name,			qi.building_code AS qi_code,			qi.building_name AS qi_name,			qu.building_code AS qu_code,			qu.building_name AS qu_name,			dongzuo.building_code AS dongzuo_code,			dongzuo.building_name AS dongzuo_name,			danyuanrukou.building_code AS danyuanrukou_code,			danyuanrukou.building_name AS danyuanrukou_name,			ceng.building_code AS ceng_code,			ceng.building_name AS ceng_name,			leaf.*		FROM		tc_building root		LEFT JOIN tc_building qi ON root.building_code = qi.pid		LEFT JOIN tc_building qu ON qi.building_code = qu.pid		LEFT JOIN tc_building dongzuo ON qu.building_code = dongzuo.pid		LEFT JOIN tc_building danyuanrukou ON dongzuo.building_code = danyuanrukou.pid		LEFT JOIN tc_building ceng ON danyuanrukou.building_code = ceng.pid		LEFT JOIN tc_building leaf ON ceng.building_code = leaf.pid		WHERE		root.building_code = 'jzjg'		AND qi.building_type = 'qi'		AND qu.building_type = 'qu'		AND dongzuo.building_type = 'dongzuo'		AND danyuanrukou.building_type = 'danyuanrukou'		AND ceng.building_type = 'ceng'		AND leaf.building_full_name IS NOT null		<if test="projectId != null and projectId != ''">			AND qi.project_id = #{projectId}		</if>		<if test="houseCode != null and houseCode != ''">			AND leaf.house_code = #{houseCode}		</if>		<if test="houseCodeNew != null and houseCodeNew != ''">			AND leaf.house_code_new = #{houseCodeNew}		</if>		<if test="buildingFullName != null and buildingFullName != ''">			AND leaf.building_full_name LIKE  CONCAT('%',#{buildingFullName},'%')		</if>		<if test="isFixedParkingSpaces != null and isFixedParkingSpaces != ''">			AND leaf.is_fixed_parking_spaces = #{isFixedParkingSpaces}		</if>		<if test="buildingType != null and buildingType != ''">			<choose>				<when test="buildingType == 'root'">					AND (root.building_type IS NULL OR root.building_type = '')				</when>				<when test="buildingType == 'qi'">					AND qi.building_type = #{buildingType}				</when>				<when test="buildingType == 'qu'">					AND qu.building_type = #{buildingType}				</when>				<when test="buildingType == 'dongzuo'">					AND dongzuo.building_type = #{buildingType}				</when>				<when test="buildingType == 'danyuanrukou'">					AND danyuanrukou.building_type = #{buildingType}				</when>				<when test="buildingType == 'ceng'">					AND ceng.building_type = #{buildingType}				</when>				<otherwise>					AND leaf.building_type = #{buildingType}				</otherwise>			</choose>		</if>		<if test="buildingCode != null and buildingCode != ''">			<choose>				<when test="buildingType == 'root' || buildingType == ''">					AND root.building_code = #{buildingCode}				</when>				<when test="buildingType == 'qi'">					AND qi.building_code = #{buildingCode}				</when>				<when test="buildingType == 'qu'">					AND qu.building_code = #{buildingCode}				</when>				<when test="buildingType == 'dongzuo'">					AND dongzuo.building_code = #{buildingCode}				</when>				<when test="buildingType == 'danyuanrukou'">					AND danyuanrukou.building_code = #{buildingCode}				</when>				<when test="buildingType == 'ceng'">					AND ceng.building_code = #{buildingCode}				</when>				<otherwise>					AND leaf.building_code = #{buildingCode}				</otherwise>			</choose>		</if>		ORDER BY leaf.building_full_name ASC	</select>  		<select id="findByCondition" parameterType="TcBuildingSearch" resultMap="ListResultMap">		SELECT			b.*,			p.`name` AS project_name		FROM tc_building b		LEFT JOIN t_sys_project p ON b.project_id = p.`code`		WHERE 1=1  		<if test="id != null and id != ''">			AND b.id = #{id}		</if>  		<if test="projectId != null and projectId != ''">			AND b.project_id = #{projectId}		</if>		<if test="houseCode != null and houseCode != ''">			AND b.house_code = #{houseCode}		</if>		<if test="houseCodeNew != null and houseCodeNew != ''">			AND b.house_code_new = #{houseCodeNew}		</if>		<if test="isStandardBuilding != null and isStandardBuilding != ''">			AND b.is_standard_building = #{isStandardBuilding}		</if>		<if test="buildingCode != null and buildingCode != ''">			AND b.building_code = #{buildingCode}		</if>		<if test="pid != null and pid != ''">			AND b.pid = #{pid}		</if>		<if test="pidIsNullOrNotNull != null and pidIsNullOrNotNull != ''">			AND b.pid IS ${pidIsNullOrNotNull}		</if>		<if test="buildingName != null and buildingName != ''">			AND b.building_name = #{buildingName}		</if>		<if test="buildingType !=null and buildingType !=''">			AND b.building_type = #{buildingType}		</if>		<if test="buildingFullName != null and buildingFullName != ''">			AND b.building_full_name = #{buildingFullName}		</if>		<if test="buildingCodeList != null">			AND b.building_code IN			<foreach collection="buildingCodeList" item="item" index="index" open="(" close=")" separator=",">				'${item}'			</foreach>		</if>		<if test="associatedParkingSpaces !=null and associatedParkingSpaces !=''">			AND b.associated_parking_spaces = #{associatedParkingSpaces}		</if>		<if test="isFixedParkingSpaces !=null and isFixedParkingSpaces !=''">			AND b.is_fixed_parking_spaces = #{isFixedParkingSpaces}		</if>		ORDER BY b.pid,b.building_full_name;  	</select>	<!-- 汇总资产信息 -->	<select id="collectAssetInfo" parameterType="TcBuildingSearch" resultType="java.util.Map">		SELECT			t1.leaf_building_type AS building_type,			FORMAT(SUM(t1.leaf_building_area),2) AS building_area,			FORMAT(SUM(t1.leaf_usable_area),2) AS usable_area,			count(*) AS total_count		FROM		(			SELECT				root.building_code AS jzjg_code,				root.building_name AS jzjg_name,				qi.building_code AS qi_code,				qi.building_name AS qi_name,				qu.building_code AS qu_code,				qu.building_name AS qu_name,				dongzuo.building_code AS dongzuo_code,				dongzuo.building_name AS dongzuo_name,				danyuanrukou.building_code AS danyuanrukou_code,				danyuanrukou.building_name AS danyuanrukou_name,				ceng.building_code AS ceng_code,				ceng.building_name AS ceng_name,				leaf.project_id AS leaf_project_id,				leaf.building_type AS leaf_building_type,				leaf.building_code AS leaf_code,				leaf.building_name AS leaf_name,				leaf.house_code AS leaf_house_code,				leaf.building_area AS leaf_building_area,				leaf.usable_area AS leaf_usable_area			FROM			tc_building root				LEFT JOIN tc_building qi ON root.building_code = qi.pid				LEFT JOIN tc_building qu ON qi.building_code = qu.pid				LEFT JOIN tc_building dongzuo ON qu.building_code = dongzuo.pid				LEFT JOIN tc_building danyuanrukou ON dongzuo.building_code = danyuanrukou.pid				LEFT JOIN tc_building ceng ON danyuanrukou.building_code = ceng.pid				LEFT JOIN tc_building leaf ON ceng.building_code = leaf.pid			WHERE				root.building_code = 'jzjg'				AND qi.building_type = 'qi'				AND qu.building_type = 'qu'				AND dongzuo.building_type = 'dongzuo'				AND danyuanrukou.building_type = 'danyuanrukou'				AND ceng.building_type = 'ceng'				<if test="projectId != null and projectId != ''">					AND qi.project_id = #{projectId}				</if>				<if test="buildingCode != null and buildingCode != ''">					<choose>						<when test="buildingType == 'root' || buildingType == ''">							AND root.building_code = #{buildingCode}						</when>						<when test="buildingType == 'qi'">							AND qi.building_code = #{buildingCode}						</when>						<when test="buildingType == 'qu'">							AND qu.building_code = #{buildingCode}						</when>						<when test="buildingType == 'dongzuo'">							AND dongzuo.building_code = #{buildingCode}						</when>						<when test="buildingType == 'danyuanrukou'">							AND danyuanrukou.building_code = #{buildingCode}						</when>						<when test="buildingType == 'ceng'">							AND ceng.building_code = #{buildingCode}						</when>						<when test="buildingType == 'ceng'">							AND ceng.building_code = #{buildingCode}						</when>						<otherwise>							AND leaf.building_code = #{buildingCode}						</otherwise>					</choose>				</if>		)t1 WHERE leaf_building_type IS NOT NULL GROUP BY leaf_building_type	</select>  	  	<select id="findBuildingByPid" parameterType="String" resultMap="BaseResultMap">  		SELECT * FROM tc_building t WHERE t.pid = #{0} ORDER BY t.building_code DESC  	</select>  	  	<insert id="batchInsert" parameterType="java.util.List">   		insert into tc_building(			id,			building_code,			pid,			building_name,			building_full_name,			project_id,			building_type,			is_charge_obj,			password,			building_area,			usable_area,			share_area,			finish_date,			floor_area,			house_code,			house_code_new,			property_name,			property_addr,			company_id,			join_flag,			join_date,			unit_wy_price,			unit_bt_price,			property_right_type,			property_attributes,			property_right_flag,			building_certificate,			asset_attributes,			market_state,			building_height,			discounts,			parking_space_type,			is_standard_building,			asset_usage,			place_attribute,			bill_address,			associated_parking_spaces,			is_fixed_parking_spaces,			creater_id,			creater_name,			modify_id,			modify_name,			create_time,			modify_time		)		values		<foreach collection="list" index="index" item="item" separator=",">		(			#{item.id},			#{item.buildingCode},			#{item.pid},			#{item.buildingName},			#{item.buildingFullName},			#{item.projectId},			#{item.buildingType},			#{item.isChargeObj},			#{item.password},			#{item.buildingArea},			#{item.usableArea},			#{item.shareArea},			#{item.finishDate},			#{item.floorArea},			#{item.houseCode},			#{item.houseCodeNew},			#{item.propertyName},			#{item.propertyAddr},			#{item.companyId},			#{item.joinFlag},			#{item.joinDate},			#{item.unitWyPrice},			#{item.unitBtPrice},			#{item.propertyRightType},			#{item.propertyAttributes},			#{item.propertyRightFlag},			#{item.buildingCertificate},			#{item.assetAttributes},			#{item.marketState},			#{item.buildingHeight},			#{item.discounts},			#{item.parkingSpaceType},			#{item.isStandardBuilding},			#{item.assetUsage},			#{item.placeAttribute},			#{item.billAddress},			#{item.isFixedParkingSpaces},			#{item.associatedParkingSpaces},			#{item.createrId},			#{item.createrName},			'',			'',			sysdate(),			sysdate()		)		</foreach>   	</insert>   	   	<delete id="batchDelete" parameterType="java.util.List">		DELETE FROM tc_building WHERE building_code != 'jzjg' AND building_code IN		<foreach collection="list" item = "buildingCode" open="(" separator="," close=")">	  		#{buildingCode }	    </foreach> 		</delete>	<delete id="deleteByID">		DELETE FROM tc_building where building_type in ('thirdparty','gongchengshigong','jianzhuzulin') and  id = #{id}	</delete>	<update id="modify" parameterType="TcBuilding">		UPDATE tc_building 		<set>			building_name = #{buildingName},			is_charge_obj = #{isChargeObj},			password = #{password},			building_area = #{buildingArea},			usable_area = #{usableArea},			share_area = #{shareArea},			finish_date = #{finishDate},			floor_area = #{floorArea},			property_name = #{propertyName},			property_addr = #{propertyAddr},			join_flag = #{joinFlag},			join_date = #{joinDate},			unit_wy_price = #{unitWyPrice},			unit_bt_price = #{unitBtPrice},			property_right_type = #{propertyRightType},			property_attributes = #{propertyAttributes},			property_right_flag = #{propertyRightFlag},			building_certificate = #{buildingCertificate},			asset_attributes = #{assetAttributes},			market_state = #{marketState},			building_height = #{buildingHeight},			discounts = #{discounts},			parking_space_type = #{parkingSpaceType},			is_standard_building = #{isStandardBuilding},			asset_usage = #{assetUsage},			place_attribute = #{placeAttribute},			bill_address = #{billAddress},			associated_parking_spaces = #{associatedParkingSpaces},			is_fixed_parking_spaces = #{isFixedParkingSpaces},			modify_id = #{modifyId},			modify_name = #{modifyName},			modify_time = sysdate()		</set>		WHERE building_code != 'jzjg'		<if test="id != null and id != ''">			AND id = #{id}		</if>		<if test="companyId != null and companyId != ''">			AND company_id = #{companyId}		</if>		<if test="buildingCode != null and buildingCode != ''">			AND building_code = #{buildingCode}		</if>	</update>	<update id="batchModify" parameterType="java.util.List">		<foreach collection="list" separator=";" index="index" item="item">			UPDATE tc_building SET				building_name = #{item.buildingName},				is_charge_obj = #{item.isChargeObj},				password = #{item.password},				building_area = #{item.buildingArea},				usable_area = #{item.usableArea},				share_area = #{item.shareArea},				finish_date = #{item.finishDate},				floor_area = #{item.floorArea},				property_name = #{item.propertyName},				property_addr = #{item.propertyAddr},				join_flag = #{item.joinFlag},				join_date = #{item.joinDate},				unit_wy_price = #{item.unitWyPrice},				unit_bt_price = #{item.unitBtPrice},				property_right_type = #{item.propertyRightType},				property_attributes = #{item.propertyAttributes},				property_right_flag = #{item.propertyRightFlag},				building_certificate = #{item.buildingCertificate},				asset_attributes = #{item.assetAttributes},				market_state = #{item.marketState},				building_height = #{item.buildingHeight},				discounts = #{item.discounts},				parking_space_type = #{item.parkingSpaceType},				is_standard_building = #{item.isStandardBuilding},				asset_usage = #{item.assetUsage},				place_attribute = #{item.placeAttribute},				bill_address = #{item.billAddress},				is_fixed_parking_spaces = #{item.isFixedParkingSpaces},				modify_id = #{item.modifyId},				modify_name = #{item.modifyName},				modify_time = sysdate()			WHERE building_code != 'jzjg'			<if test="item.id != null and item.id != ''">				AND id = #{item.id}			</if>			<if test="item.buildingCode != null and item.buildingCode != ''">				AND building_code = #{item.buildingCode}			</if>		</foreach>	</update>	<!-- 更改建筑全名称 -->	<update id="renameBuildingFullName" parameterType="String">		UPDATE tc_building SET  building_full_name = #{0} WHERE building_code != 'jzjg' AND building_code = #{1}	</update>	<!-- ****************************分割线******************************************************* -->	<select id="loadBuildingByProjectIdWithoutTree" parameterType="String" resultMap="BaseResultMap">		select * from tc_building t where project_id = #{0} order by building_name asc	</select>		<select id="getTcBulidCodeList" parameterType="java.util.List" resultMap="BaseResultMap">		SELECT tb.id,tb.building_code,tb.building_full_name FROM tc_building tb,t_sys_project tp WHERE tb.project_id = tp.code AND tp.name=#{projectName}		AND NOT EXISTS (SELECT 1 FROM tc_water_meter wm WHERE wm.relation_building =tb.building_code)		AND building_full_name IN 		<foreach collection="list" open="(" close=")" item="fullName" separator=",">			#{fullName}			</foreach> 	</select>			<select id="getTcBulidByFullName" parameterType="String" resultMap="BaseResultMap">		select * from tc_building where building_full_name =#{1} and project_id=#{0}	</select>	<select id="loadBuildingByBuildingCode" parameterType="String" resultMap="BaseResultMap">		select * from tc_building t where building_code = #{0}	</select>	<select id="loadBuildingByPickUpTree"  resultMap="BaseResultMap">		select * from tc_building t where project_id =		<if test="projectId != null and projectId != ''">			#{projectId}		</if>		<if test="buildingCode != null and buildingCode != ''">			(SELECT project_id FROM tc_building WHERE building_code = #{buildingCode})		</if>		<if test="custId != null and custId != ''">			(SELECT project_id FROM tc_person_cust WHERE cust_id = #{custId})		</if>		order by building_name asc	</select>		<!-- 获取所有需要计费的building -->	<select id="findChargeBuildingByProjectCode" parameterType="String" resultMap="BaseResultMap">		select *		  from tc_building 		 where project_id = #{0}		   and is_charge_obj = 'Yes'	</select>		<!-- 根据项目编号获取 是收费对象，且建筑类型为house何store的建筑-->	<select id="loadBuildingByProjectIdAndhousestore" parameterType="String" resultMap="BaseResultMap">		select building_code,building_full_name,project_id,building_type from tc_building 		where project_id=#{0} 		and (building_type ='house' or building_type='store') 		and is_charge_obj='Yes'	</select>		<!-- 物业管理费分摊需要用到项目的总面积 -->	<select id="getSumHouseAreaByProject" parameterType="TcBuilding" resultType="java.lang.Double">		    SELECT 				<if test=" null != buildingArea ">			  		TRUNCATE(SUM(house_area),2)				</if>				<if test="null == buildingArea">					TRUNCATE(SUM(usable_area),2)				</if>			FROM			  tc_house th 			WHERE EXISTS 			  (SELECT 			    1 			  FROM			    tc_building tb 			  WHERE tb.project_id = #{projectId}			   <if test="null != buildingCode">			  	  AND tb.building_code = #{buildingCode}			   </if>			    AND tb.is_charge_obj = 'Yes' 			    AND th.building_code = tb.building_code)	</select>		<select id="listPageBuildingInEntery" parameterType="com.everwing.coreservice.common.wy.entity.property.property.CustomerSearch" resultMap="ListResultMap">		SELECT DISTINCT			b.house_code as houseNum, b.id,b.building_code,b.building_name,b.building_full_name,b.pid,b.project_id,b.building_type,b.is_charge_obj,b.password,b.building_area as building_area,b.floor_area,b.company_id,b.modify_time		FROM tc_person_building pb LEFT JOIN  tc_building b ON b.id = pb.building_id		<where>			<if test="@com.everwing.coreservice.common.utils.CommonUtils@notBlank(houseNum) and custIds != null and custIds.size() > 0">				(			</if>			<if test="custIds != null and custIds.size() > 0">				 pb.cust_id IN				<foreach close=")" collection="custIds" item="custId" open="(" separator=",">'${custId}'</foreach>				OR pb.enterprise_id IN				<foreach close=")" collection="custIds" item="custId" open="(" separator=",">'${custId}'</foreach>			</if>			<if test="@com.everwing.coreservice.common.utils.CommonUtils@notBlank(houseNum)  and custIds != null and custIds.size() > 0">				)			</if>			<if test="@com.everwing.coreservice.common.utils.CommonUtils@notBlank(buildingAddress)">OR			    b.building_full_name LIKE CONCAT('%',#{buildingAddress},'%')			</if>			<if test="@com.everwing.coreservice.common.utils.CommonUtils@notBlank(houseNum)">            	and b.house_code = #{houseNum}	        </if>			<if test="custIds.size() == 0 and !@com.everwing.coreservice.common.utils.CommonUtils@notBlank(houseNum) and !@com.everwing.coreservice.common.utils.CommonUtils@notBlank(buildingAddress)">            	FALSE	        </if>		</where>		ORDER BY b.building_name	</select>                      		<select id="findByParams" parameterType="java.util.Map" resultMap="BaseResultMap">		select * 		from tc_building		where 1 = 1		<if test="null != projectId">			and project_id = #{projectId}		</if>		<if test="null != isChargeObj">			and is_charge_obj = #{isChargeObj}		</if>		<if test="null != buildingCode">			and building_code = #{buildingCode}		</if>		<if test="null != fullName">			and building_full_name like CONCAT('%',#{fullName},'%')		</if>		<if test="null != fullNames">			and building_full_name in 			<foreach collection="fullNames" item="name" open="(" close=")" separator=",">				#{name}			</foreach>		</if>		<if test="null != buildingCodes">			and building_code in			<foreach collection="buildingCodes" item="code" open="(" close=")" separator=",">				#{code}			</foreach>		</if>	</select>			<!-- 根据项目编号统计为收费对象的建筑数量 -->	<select id="countIsChargeObjByProject" parameterType="String" resultType="java.lang.Integer">		select count(*) totalChargeObj from tc_building where project_id=#{0} and is_charge_obj=#{1}	</select>		<!-- 根据项目编号和buildCode查询 -->	<select id="findByProjectIdAndBuildCode" parameterType="String" resultMap="BaseResultMap">		select * from tc_building where project_id=#{0} and building_code=#{1}	</select>			<!-- 根据项目编号过滤已经被其他表占用了的收费对象建筑 -->	<select id="listPageFilterRelationBuild" parameterType="TcBuildingSearch" resultMap="BaseResultMap">		SELECT			t.*		FROM			tc_building t		WHERE			t.building_code NOT IN 		(			SELECT meter.relation_building  from 						tc_electricity_meter meter 						where meter.project_id=#{projectId}		)		and t.project_id=#{projectId}	</select>			<!-- 根据houseCode获取资产, 限定房屋类型为house, store, parkspace -->	<select id="findByCode" parameterType="TcBuildingSearch" resultMap="ListResultMap">		SELECT			b.*,			p.`name` AS project_name,			(SELECT li.`name` FROM t_sys_lookup_item li WHERE li.parent_code = 'buildingType' AND li.`code` = b.building_type) as building_type_name		FROM tc_building b		LEFT JOIN t_sys_project p ON b.project_id = p.`code`		WHERE 1=1		<if test="houseCode != null and houseCode != ''">			AND b.house_code = #{houseCode}		</if>		<if test="buildingCode != null and buildingCode != ''">			AND b.building_code = #{buildingCode}		</if>		and building_type in ('house','store','parkspace')		ORDER BY b.building_full_name ASC		limit 1  	</select>	<select id="findAllUnzipedBuildings" resultMap="BaseResultMap">		select b.*		from t_bs_charge_bill_history a		LEFT JOIN tc_building b on a.building_code=b.building_code		where a.project_id=#{projectId} and DATE_FORMAT(a.billing_time,'%Y-%m') = DATE_FORMAT(#{billingTime},'%Y-%m')		and b.building_type in ('gonggongchangdichuzu','disanfangzichan','gongchengshigong')		group by a.building_code	</select>  	  	<!-- 获取本周期内存在账单的建筑 -->  	<select id="findHasBillsBuildings" resultMap="BaseResultMap">  		  SELECT DISTINCT t1.*			FROM tc_building t1, t_bs_charge_bill_history t2 , tc_building t3		   WHERE LOCATE(t3.building_code_new, t1.building_code_new ) > 0			 AND DATE_FORMAT(t2.billing_time,'%Y-%m') = DATE_FORMAT(#{billingTime},'%Y-%m')			 AND t2.building_code = t1.building_code			 AND t3.building_code = #{buildingCode}			 and t2.project_id = #{projectId}		   group by t1.house_code asc  	</select></mapper>